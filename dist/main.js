(()=>{var e={426:(e,t,r)=>{"use strict";r.d(t,{Z:()=>i});var n=r(537),s=r.n(n),o=r(645),a=r.n(o)()(s());a.push([e.id,"#playerBoard, #computerBoard{\n    display: grid;\n    grid-template-columns: repeat(11,1fr);\n    grid-template-rows:  repeat(11,1fr);\n    margin:1rem;\n}\n\n.boards{\n    display: flex;\n}\n\n.boardCell{\n    border: 1px solid black;\n    background-color: #67e8f9;\n    min-width: 2rem;\n    min-height: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.cellHeader{\n    background-color: #1e293b;\n    color: #fafafa;\n    border: 1px solid #22c55e;\n}\n\n.isShip{\n    background-color: black;\n}\n\n.isHit{\n    background-color: red;\n}\n\n.isMissed{\n    background-color: green;\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,qCAAqC;IACrC,mCAAmC;IACnC,WAAW;AACf;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,uBAAuB;IACvB,yBAAyB;IACzB,eAAe;IACf,gBAAgB;IAChB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,cAAc;IACd,yBAAyB;AAC7B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,uBAAuB;AAC3B",sourcesContent:["#playerBoard, #computerBoard{\n    display: grid;\n    grid-template-columns: repeat(11,1fr);\n    grid-template-rows:  repeat(11,1fr);\n    margin:1rem;\n}\n\n.boards{\n    display: flex;\n}\n\n.boardCell{\n    border: 1px solid black;\n    background-color: #67e8f9;\n    min-width: 2rem;\n    min-height: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.cellHeader{\n    background-color: #1e293b;\n    color: #fafafa;\n    border: 1px solid #22c55e;\n}\n\n.isShip{\n    background-color: black;\n}\n\n.isHit{\n    background-color: red;\n}\n\n.isMissed{\n    background-color: green;\n}"],sourceRoot:""}]);const i=a},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r="",n=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),n&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=e(t),n&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(e,r,n,s,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(n)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(a[c]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);n&&a[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),s&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=s):l[4]="".concat(s)),t.push(l))}},t}},537:e=>{"use strict";e.exports=function(e){var t=e[1],r=e[3];if(!r)return t;if("function"==typeof btoa){var n=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),o="/*# ".concat(s," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},379:e=>{"use strict";var t=[];function r(e){for(var r=-1,n=0;n<t.length;n++)if(t[n].identifier===e){r=n;break}return r}function n(e,n){for(var o={},a=[],i=0;i<e.length;i++){var c=e[i],d=n.base?c[0]+n.base:c[0],l=o[d]||0,u="".concat(d," ").concat(l);o[d]=l+1;var p=r(u),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(h);else{var f=s(h,n);n.byIndex=i,t.splice(i,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function s(e,t){var r=t.domAPI(t);return r.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;r.update(e=t)}else r.remove()}}e.exports=function(e,s){var o=n(e=e||[],s=s||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var i=r(o[a]);t[i].references--}for(var c=n(e,s),d=0;d<o.length;d++){var l=r(o[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}o=c}}},569:e=>{"use strict";var t={};e.exports=function(e,r){var n=function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}(e);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");n.appendChild(r)}},216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,r)=>{"use strict";e.exports=function(e){var t=r.nc;t&&e.setAttribute("nonce",t)}},795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(r){!function(e,t,r){var n="";r.supports&&(n+="@supports (".concat(r.supports,") {")),r.media&&(n+="@media ".concat(r.media," {"));var s=void 0!==r.layer;s&&(n+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),n+=r.css,s&&(n+="}"),r.media&&(n+="}"),r.supports&&(n+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(n,e,t.options)}(t,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},498:e=>{e.exports=class{constructor(){this.board=[];for(let e=0;e<10;e+=1){this.board[e]=[];for(let t=0;t<10;t+=1)this.board[e][t]=[!1,void 0]}this.ships=[]}getBoard(){return this.board}isHit(e,t){const r=1*e,n=1*t;return this.board[r][n][0]}isShip(e,t){const r=1*e,n=1*t;return!!this.board[r][n][1]}attack(e,t){e>=0&&e<=9&&t>=0&&t<=9&&(this.isHit(e,t)||(this.board[e][t][0]=!0,void 0!==this.board[e][t][1]&&this.board[e][t][1].hit()))}canPlaceShip(e,t,r,n){const s=1*e,o=1*t;if(!(s>=0&&s<=9&&o>=0&&o<=9))return!1;if("horizontal"===r){const e=s+n-1;if(s<0||e>9)return!1;for(let t=s;t<=e;t+=1)if(void 0!==this.board[t][o][1])return!1}else if("rhorizontal"===r){const e=s-n+1,t=s;if(e<0||t>9)return!1;for(let r=e;r<=t;r+=1)if(void 0!==this.board[r][o][1])return!1}else if("vertical"===r){const e=o+n-1;if(o<0||e>9)return!1;for(let t=o;t<=e;t+=1)if(void 0!==this.board[s][t][1])return!1}else if("rvertical"===r){const e=o-n+1,t=o;if(e<0||t>9)return!1;for(let r=e;r<=t;r+=1)if(void 0!==this.board[s][r][1])return!1}return!0}addShip(e,t,r,n){const s=1*e,o=1*t;if(this.canPlaceShip(s,o,r,n.squares)){if("horizontal"===r){const e=s,t=s+n.squares-1;for(let r=e;r<=t;r+=1)this.board[r][o][1]=n}else if("rhorizontal"===r){const e=s;for(let t=s-n.squares+1;t<=e;t+=1)this.board[t][o][1]=n}else if("vertical"===r){const e=o,t=o+n.squares-1;for(let r=e;r<=t;r+=1)this.board[s][r][1]=n}else if("rvertical"===r){const e=o;for(let t=o-n.squares+1;t<=e;t+=1)this.board[s][t][1]=n}return this.ships.push(n),!0}return!1}allShipsSunk(){for(let e=0;e<this.ships.length;e+=1)if(!this.ships[e].isSunk())return!1;return!0}}},507:(e,t,r)=>{const n=r(498);e.exports=class{constructor(e="George"){this.name=e,this.gameBoard=new n}attack(e,t){this.gameBoard.attack(e,t)}cellStatus(e,t){return[this.gameBoard.isHit(e,t),this.gameBoard.isShip(e,t)]}hasLost(){return this.gameBoard.allShipsSunk(),!0}}},643:e=>{e.exports=class{constructor(e){this.squares=e,this.noOfHits=0}getSquares(){return this.squares}getHits(){return this.noOfHits}hit(){this.noOfHits+=1}isSunk(){return this.squares-this.noOfHits<=0}}}},t={};function r(n){var s=t[n];if(void 0!==s)return s.exports;var o=t[n]={id:n,exports:{}};return e[n](o,o.exports,r),o.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.nc=void 0,(()=>{"use strict";var e=r(379),t=r.n(e),n=r(795),s=r.n(n),o=r(569),a=r.n(o),i=r(565),c=r.n(i),d=r(216),l=r.n(d),u=r(589),p=r.n(u),h=r(426),f={};f.styleTagTransform=p(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=s(),f.insertStyleElement=l(),t()(h.Z,f),h.Z&&h.Z.locals&&h.Z.locals;const m=(e,t)=>{const r=document.createElement("div");r.classList.add("boardCell"),r.classList.add("cellHeader"),r.textContent=" ",e.appendChild(r);for(let t=1;t<=10;t+=1){const r=document.createElement("div");r.classList.add("boardCell"),r.classList.add("cellHeader"),r.textContent=`${t}`,e.appendChild(r)}let n="A".charCodeAt(0),s=0;for(let r=1;r<=10;r+=1){const r=document.createElement("div");r.classList.add("boardCell"),r.classList.add("cellHeader"),r.textContent=String.fromCharCode(n),e.appendChild(r),n+=1;for(let r=1;r<=10;r+=1){const r=document.createElement("div");r.classList.add("boardCell"),r.textContent=" ",r.setAttribute("id",`${t}${s}`),e.appendChild(r),s+=1}}};var A=r(507),g=r.n(A),v=r(643),b=r.n(v);const B=(e,t)=>{console.log("updateDom",e);for(let r=0;r<10;r+=1)for(let n=0;n<10;n+=1)if(!0===e[r][n][0]){const s=document.getElementById(`${t}${10*r+n}`);!0===e[r][n][1]?(s.classList.contains("isHit")||s.classList.add("isHit"),s.classList.contains("isShip")&&s.classList.remove("isShip"),s.classList.contains("isMissed")&&s.classList.remove("isMissed")):(s.classList.contains("isHit")&&s.classList.remove("isHit"),s.classList.contains("isShip")&&s.classList.remove("isShip"),s.classList.contains("isMissed")||s.classList.add("isMissed"))}else{const s=document.getElementById(`${t}${10*r+n}`);!0===e[r][n][1]&&(s.classList.contains("isHit")&&s.classList.remove("isHit"),s.classList.contains("isShip")||s.classList.add("isShip"),s.classList.contains("isMissed")&&s.classList.remove("isMissed"))}};(()=>{const e=document.getElementById("playerBoard"),t=document.getElementById("computerBoard");m(e,"player"),m(t,"computer")})();const C=document.getElementById("playerBoard"),y=document.getElementById("computerBoard"),S=new(g())("Teibok"),I=new(g())("George");S.gameBoard.addShip(0,0,"horizontal",new(b())(5)),S.gameBoard.addShip(1,1,"horizontal",new(b())(4)),S.gameBoard.addShip(2,2,"horizontal",new(b())(3)),S.gameBoard.addShip(3,3,"horizontal",new(b())(3)),S.gameBoard.addShip(4,4,"horizontal",new(b())(2)),I.gameBoard.addShip(0,0,"horizontal",new(b())(5)),I.gameBoard.addShip(1,1,"horizontal",new(b())(4)),I.gameBoard.addShip(2,2,"horizontal",new(b())(3)),I.gameBoard.addShip(3,3,"horizontal",new(b())(3)),I.gameBoard.addShip(4,4,"horizontal",new(b())(2)),B(S.gameBoard.getBoard(),"playerBoard"),B(I.gameBoard.getBoard(),"computerBoard"),C.addEventListener("click",(function(e){e.target.getAttribute("id")})),y.addEventListener("click",(function(e){const t=e.target.getAttribute("id");if(t){const e=t.replace(/[^0-9]/g,""),r=I.cellStatus(Math.trunc(e/10),e%10);!1===r[0]&&(!0===r[1]?console.log("Ship has been hit!"):console.log("Has hit an empty space"))}}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,